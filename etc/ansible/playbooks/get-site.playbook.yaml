- name: Playbook to dump SQL db
  hosts: myservers

  tasks:
    -
    - name: Set dump dir
      set_fact:
        dump_dir: "/var/tmp/dumps"

    - name: Set NOW
      set_fact:
        now: "{{ ansible_date_time.iso8601 | replace(':','_') }}"

    - name: Set file names
      set_fact:
        dump_file: "{{ dump_dir }}/{{ now }}.sql.gz.enc"
        files_dir: "{{ dump_dir }}/{{ now }}"
        archive_file: "{{ dump_dir }}/{{ now }}.tgz"

    - name: Ensure dump dir
      file:
        path: "{{ dump_dir }}"
        state: directory
        mode: '0755'

    - name: Dump MySQL database and encrypt without writing to disk
      shell: >
        docker compose -f /opt/docker/drupal/docker-compose.yml exec mysql \
        mysqldump \
          --single-transaction \
          --quick \
          --lock-tables=false \
          --databases {{ db_name }} \
          --host 127.0.0.1 \
          --user={{ db_user_name }} \
          --password={{ db_user_password }} \
          | \
          gzip \
          | \
          openssl aes-256-cbc \
            -out "{{ dump_file }}" \
            -pbkdf2 \
            -pass pass:qwerty

    - name: Get the dump
      fetch:
        src: "{{ dump_file }}"
        dest: backups

    - name: Get the fies from docker
      shell: >
        docker cp drupal-drupal-1:/opt/drupal/web/sites/default/files {{ files_dir }}

    - name: compress the files
      shell: >
        tar -C {{ dump_dir }} -zcvf {{ archive_file }} {{ files_dir | basename }}

    - name: Get the files
      fetch:
        src: "{{ archive_file }}"
        dest: backups

    - name: Tidy up
      file:
        path: "{{ dump_dir }}"
        state: absent
